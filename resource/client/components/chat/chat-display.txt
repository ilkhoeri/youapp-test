'use client';
import * as React from 'react';
import { Label } from '../fields/label';
import { Button } from '../ui/button';
import { Textarea } from '../fields/textarea';
import { Separator } from '../ui/separator';
import { Avatar } from '../ui/avatar-oeri';
import { ArchiveFillIcon, TrashFillIcon } from '../icons-fill';
import { Message } from '@prisma/client';
import { formatShortTime } from '@/resource/const/times-helper';

interface MailDisplayProps {
  message: Message | null;
}

export function MailDisplay({ message }: MailDisplayProps) {
  const today = new Date();

  return (
    <div className="flex h-full flex-col">
      <div className="flex items-center p-2">
        <div className="flex items-center gap-2">
          <Button variant="ghost" size="icon" disabled={!message}>
            <ArchiveFillIcon className="h-4 w-4" />
            <span className="sr-only">Archive</span>
          </Button>

          <Button variant="ghost" size="icon" disabled={!message}>
            <ArchiveFillIcon className="h-4 w-4" />
            <span className="sr-only">Move to junk</span>
          </Button>

          <Button variant="ghost" size="icon" disabled={!message}>
            <TrashFillIcon className="h-4 w-4" />
            <span className="sr-only">Move to trash</span>
          </Button>

          <Separator orientation="vertical" className="mx-1 h-6" />
          {/* <Tooltip>
            <Popover>
              <PopoverTrigger asChild>
                <TooltipTrigger asChild>
                  <Button variant="ghost" size="icon" disabled={!message}>
                    <Clock className="h-4 w-4" />
                    <span className="sr-only">Snooze</span>
                  </Button>
                </TooltipTrigger>
              </PopoverTrigger>
              <PopoverContent className="flex w-[535px] p-0">
                <div className="flex flex-col gap-2 border-r px-2 py-4">
                  <div className="px-4 text-sm font-medium">Snooze until</div>
                  <div className="grid min-w-[250px] gap-1">
                    <Button variant="ghost" className="justify-start font-normal">
                      Later today <span className="ml-auto text-muted-foreground">{format(addHours(today, 4), 'E, h:m b')}</span>
                    </Button>
                    <Button variant="ghost" className="justify-start font-normal">
                      Tomorrow
                      <span className="ml-auto text-muted-foreground">{format(addDays(today, 1), 'E, h:m b')}</span>
                    </Button>
                    <Button variant="ghost" className="justify-start font-normal">
                      This weekend
                      <span className="ml-auto text-muted-foreground">{format(nextSaturday(today), 'E, h:m b')}</span>
                    </Button>
                    <Button variant="ghost" className="justify-start font-normal">
                      Next week
                      <span className="ml-auto text-muted-foreground">{format(addDays(today, 7), 'E, h:m b')}</span>
                    </Button>
                  </div>
                </div>
                <div className="p-2">
                  <Calendar />
                </div>
              </PopoverContent>
            </Popover>
            <TooltipContent>Snooze</TooltipContent>
          </Tooltip> */}
        </div>
        <div className="ml-auto flex items-center gap-2">
          <Button variant="ghost" size="icon" disabled={!message}>
            <Reply className="h-4 w-4" />
            <span className="sr-only">Reply</span>
          </Button>

          <Button variant="ghost" size="icon" disabled={!message}>
            <ReplyAll className="h-4 w-4" />
            <span className="sr-only">Reply all</span>
          </Button>

          <Button variant="ghost" size="icon" disabled={!message}>
            <Forward className="h-4 w-4" />
            <span className="sr-only">Forward</span>
          </Button>
        </div>
        <Separator orientation="vertical" className="mx-2 h-6" />
        {/* <Dropdown>
          <DropdownMenuTrigger asChild>
            <Button variant="ghost" size="icon" disabled={!mail}>
              <MoreVertical className="h-4 w-4" />
              <span className="sr-only">More</span>
            </Button>
          </DropdownMenuTrigger>
          <DropdownMenuContent align="end">
            <DropdownMenuItem>Mark as unread</DropdownMenuItem>
            <DropdownMenuItem>Star thread</DropdownMenuItem>
            <DropdownMenuItem>Add label</DropdownMenuItem>
            <DropdownMenuItem>Mute thread</DropdownMenuItem>
          </DropdownMenuContent>
        </Dropdown> */}
      </div>
      <Separator />
      {message ? (
        <div className="flex flex-1 flex-col">
          <div className="flex items-start p-4">
            <div className="flex items-start gap-4 text-sm">
              <Avatar color="transparent" alt={''} src={message.image}>
                {message.body
                  ?.split(' ')
                  ?.map(chunk => chunk[0])
                  ?.join('')}
              </Avatar>
              <div className="grid gap-1">
                <div className="font-semibold">{message.name}</div>
                <div className="line-clamp-1 text-xs">{message.subject}</div>
                <div className="line-clamp-1 text-xs">
                  <span className="font-medium">Reply-To:</span> {message.email}
                </div>
              </div>
            </div>
            {message.lastMessageAt && <div className="ml-auto text-xs text-muted-foreground">{formatShortTime(new Date(message.lastMessageAt))}</div>}
          </div>
          <Separator />
          <div className="flex-1 whitespace-pre-wrap p-4 text-sm">{message.name}</div>
          <Separator className="mt-auto" />
          <div className="p-4">
            <form>
              <div className="grid gap-4">
                <Textarea className="p-4" placeholder={`Reply ${message.name}...`} />
                <div className="flex items-center">
                  <Label htmlFor="mute" className="flex items-center gap-2 text-xs font-normal">
                    {/* <Switch id="mute" aria-label="Mute thread" /> */}
                    Mute this thread
                  </Label>
                  <Button onClick={e => e.preventDefault()} size="sm" className="ml-auto">
                    Send
                  </Button>
                </div>
              </div>
            </form>
          </div>
        </div>
      ) : (
        <div className="p-8 text-center text-muted-foreground">No message selected</div>
      )}
    </div>
  );
}
