# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# https://vercel.com/docs/storage/vercel-postgres
POSTGRES_URL=""
POSTGRES_PRISMA_URL=""
POSTGRES_URL_NO_SSL=""
POSTGRES_URL_NON_POOLING=""
POSTGRES_USER=""
POSTGRES_HOST=""
POSTGRES_PASSWORD=""
POSTGRES_DATABASE=""

# mongodb
MONGODB_DATABASE_URL=mongodb+srv://<your_cloud_name>:<your_cloud_password>@<your_cloud_domain>.<your_cloud_domain_id>.mongodb.net/<your_cloud_sub_domain>

# postgresql - neon db
NEON_DATABASE_URL=""
# uncomment next line if you use Prisma <5.10
NEON_DATABASE_URL_UNPOOLED=""

NEXT_PUBLIC_SITE_URL="" # url for current web (e.g. http://localhost:3000)
NEXT_PUBLIC_FRONTEND_URL="" #url web public domain

# openssl rand -base64 33
# or
# https://generate-secret.vercel.app/32
AUTH_SECRET=

# https://authjs.dev/getting-started/providers/github
AUTH_GITHUB_ID=
AUTH_GITHUB_SECRET=

# https://cloudinary.com/documentation/nextjs_configuration_tutorial#configure_cloudinary
# https://next.cloudinary.dev/clduploadwidget/signed-uploads#api-endpoint-to-sign-requests
NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=
CLOUDINARY_URL=cloudinary:
# CLOUDINARY_URL=cloudinary://<your_api_key>:<your_api_secret>@<your_cloud_name>

# resend
EMAIL_SERVER=''
# use github
RESEND_API_KEY=''

# pusher
# app_id
PUSHER_APP_ID=''
# secret
PUSHER_SECRET=''
# key
NEXT_PUBLIC_PUSHER_APP_KEY=''
# cluster
NEXT_PUBLIC_CLUSTER_APP_KEY=''
